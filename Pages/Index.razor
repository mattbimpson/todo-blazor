@page "/"
@using todo_blazor.Components
@using todo_blazor.Models
@using todo_blazor.Services
@inject IStorageService _localStorageService

<div class="todo-contents">
  <div class="header">
    stuff to do
  </div>
  <div class="add-container">
    <input type="text" id="txtTodo" class="text-input" placeholder="what do you need to do?" @bind="description" />
    <button type="button" id="btnAdd" class="btn" @onclick="@AddTodo">Add todo</button>
  </div>
  <TodoList todos=todos />
  <ConfirmBtn buttonText="Clear all your todos?" Action="@ClearAll" />
</div>

@code {
  private List<Todo> todos = new List<Todo>();
  private string description = "";

  protected override async Task OnInitializedAsync()
  {
    var cachedItems = await _localStorageService.GetItemAsync<List<Todo>>("Todo-List");
    if (cachedItems != null)
    {
      this.todos = cachedItems;
    }
  }

  private void AddTodo()
  {
    var id = this.todos.Count > 0 ? this.todos.Last().Id + 1 : 0;
    todos.Add(new Todo
      {
        Description = description,
        Id = id
      });
    description = "";

    this.UpdateTodoCache();
  }

  private void ClearAll()
  {
    this.todos = new List<Todo>();
    this.UpdateTodoCache();
    base.StateHasChanged();
  }

  private async void UpdateTodoCache()
  {
    await _localStorageService.UpdateLocalStorage("Todo-List", this.todos);
  }
}

<style scoped>
  .add-container input {
    margin: 5px;
    border-radius: 5px;
    border: 0px;
    padding: 5px;
  }
</style>